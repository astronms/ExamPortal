{"ast":null,"code":"import { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthService } from '../services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@auth0/angular-jwt\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, authService, jwtHelper) {\n      this.router = router;\n      this.authService = authService;\n      this.jwtHelper = jwtHelper;\n    }\n\n    canActivate(route) {\n      const user = this.authService.userValue;\n\n      if (user) {\n        if (this.jwtHelper.isTokenExpired(user.token)) {\n          this.router.navigate([\"login\"]);\n          return false;\n        }\n\n        if (route.data.roles && !route.data.roles.includes(user.role)) {\n          this.router.navigate(['/']);\n          return false;\n        }\n\n        return true;\n      }\n\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.JwtHelperService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}